name: Cross-Platform Build

on:
  workflow_dispatch:  # Manually trigger the workflow

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup GCC On Linux
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install gcc g++ -y

    - name: Setup MinGW (Windows)
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1
    
    # - name: Setup MacOS
    #   if: matrix.os == 'macos-latest'
    #   uses: niokasgami/setup-gcc@v1
    #   with:
    #     gcc-version: '11.2.0' # Specify the version you need


    - name: Build on Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        echo "build start"
        pwd
        ls -al 
        chmod a+x clean.sh build.sh
        ./clean.sh
        ./build.sh
        echo "executing test"
        bin/sqinn test
        echo "build done"
      shell: bash
    
    - name: Build on Windows
      if: matrix.os == 'windows-latest'
      run: |
        echo build start
        dir
        cl /Fe:sqinn.exe src\conn.c src\mem.c src\mem_test.c src\conn_test.c src\handler.c src\handler_test.c src\loop.c src\main.c /link /OUT:dist\sqinn.exe
        dir
        echo executing test
        .\sqinn.exe test
        if not exist dist md dist
        copy sqinn.exe dist
        echo build done
      shell: bash
    
    - name: Build on macOS
      if : matrix.os == 'macos-latest'
      run: |
        echo "build start"
        pwd
        ls -al 
        chmod a+x clean.sh build.sh
        ./clean.sh
        ./build.sh
        echo "executing test"
        bin/sqinn test
        echo "build done"

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: dist-${{ matrix.os }}
        path: dis
